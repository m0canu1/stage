#!/bin/bash

# fase, uplink, management, team...

# -p = phase [1 or 2]
# -u = uplink interface
# -m = management interface
# -r = masquerading mode [true for random addresses, false for no masquerading, set single or multiple (around "") IPs (for each team, in order)]
# -t = team n interface (around quotes "")
# -l = log (true or value (log limit) to enable. false if you don't want to log at all)

while getopts p:l:u:m:r:t: option
do
case "${option}"
in
p) PHASE=${OPTARG};;
u) UPLINK=${OPTARG};;
m) MANAGEMENT_INTERFACE=${OPTARG};;
r) MASQUERADING=(${OPTARG});; # LE PARENTESI SERVONO A TRASFORMARE LA STRINGA IN ARRAY
t) TEAMS=(${OPTARG});; #lista delle interfacce, in ordine
l) LOG=${OPTARG};;
esac
done



# Pulizia delle attuali regole e reset ad ACCEPT
sudo iptables -F
sudo iptables -P FORWARD ACCEPT
sudo iptables -P INPUT ACCEPT
sudo iptables -P OUTPUT ACCEPT
sudo iptables -t nat -F
sudo iptables -X # elimina ogni chain creata dall'utente



# abilita connessione internet attraverso VRouter
sudo iptables -t nat -A POSTROUTING -o $UPLINK -j MASQUERADE


if [ $LOG == true ]
then
    sudo iptables -N INLOGGING # crea nuova chain per il log dei pacchetti in INPUT
    sudo iptables -A INLOGGING -j LOG --log-prefix "INPUT-LOG: " --log-level 4
    sudo iptables -A INPUT -j INLOGGING # manda tutti i pacchetti entranti alla chain INLOGGING

    sudo iptables -N FWLOGGING # crea nuova chain per il log dei pacchetti inoltrati
    sudo iptables -A FWLOGGING -j LOG --log-prefix "FORWARD-LOG: " --log-level 4 # senza un limite
    sudo iptables -A FORWARD -j FWLOGGING 
elif [ $LOG != false ]
then
    sudo iptables -N INLOGGING # crea nuova chain per il log dei pacchetti in INPUT
    sudo iptables -A INLOGGING -m limit --limit $LOG -j LOG --log-prefix "INPUT-LOG: " --log-level 4
    sudo iptables -A INPUT -j INLOGGING # manda tutti i pacchetti entranti alla chain INLOGGING

    sudo iptables -N FWLOGGING 
    sudo iptables -A FWLOGGING -m limit --limit $LOG -j LOG --log-prefix "FORWARD-LOG: " --log-level 4
    sudo iptables -A FORWARD -j FWLOGGING 
fi


# --------------------- INPUT ---------------------------------------
# DROP dei pacchetti da ricevere (incluso ping)
sudo iptables -P INPUT DROP

# Accetta tutte le connessioni dal management
sudo iptables -A INPUT -i $MANAGEMENT_INTERFACE -j ACCEPT

# Accetta tutte le connessioni da macchina host di vmware (per comodità)
sudo iptables -A INPUT -s 172.168.1.1 -j ACCEPT

# Accetta tutte le connessioni stabilite (sia da esterno, sia squadre (pingate), sia management (già con la regola sopra))
sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT

# Permette connessioni loopback
sudo iptables -A INPUT -i lo -j ACCEPT
# implicita perché OUTPUT accetta tutto
# sudo iptables -A OUTPUT -o lo -j ACCEPT

# Permette le risposte al ping iniziato dal virtual router da parte di chiunque
# sudo iptables -A INPUT -p icmp --icmp-type 0 -j ACCEPT


# ----------------------- FORWARD -----------------------------------

# DROP di tutti i pacchetti da inoltrare
sudo iptables -P FORWARD DROP

# Permette ping da management a chiunque + risposta
# SUPERFLUA? FORWARD ACCEPTS ALL
# sudo iptables -A FORWARD -p icmp --icmp-type 8 -i $MANAGEMENT_INTERFACE -j ACCEPT


# permette risposta al ping iniziato da management (SUPERFLUO? DATO CHE FORWARD PERMETTE TUTTO)
# sudo iptables -A FORWARD -p icmp --icmp-type 0 -o $MANAGEMENT_INTERFACE -j ACCEPT


# Permette nuova connessione tcp solo da management, gli altri non possono iniziarla (SUPERFLUO? FORWARD ACCEPTS ALL)
# sudo iptables -A FORWARD -p tcp -i $MANAGEMENT_INTERFACE -m state --state NEW -j ACCEPT


# Permette al management di iniziare qualsiasi tipo di connessione verso chiunque (esterno o squadre)
sudo iptables -A FORWARD -i $MANAGEMENT_INTERFACE -j ACCEPT

# Permette a chiunque (esterno o squadre) di rispondere ad una connessione già stabilita (tcp, udp, ping, ecc...)
sudo iptables -A FORWARD -m conntrack --ctstate ESTABLISHED -j ACCEPT


# Permettere connessione nuova udp da management
# sudo iptables -A FORWARD -p udp -i $MANAGEMENT_INTERFACE -m state --state NEW -j ACCEPT



if [ $PHASE -eq 2 ]
then 

    # SECONDA FASE

    # accept all sulla catena di forward
    sudo iptables -P FORWARD ACCEPT 
    

    # drop pacchetti destinati ad uplink e management
    sudo iptables -A FORWARD -o $UPLINK -j DROP
    sudo iptables -A FORWARD -o $MANAGEMENT_INTERFACE -j DROP


    if [ ${#MASQUERADING[@]} -eq 1 ]
    then
        
        if [ $MASQUERADING = true ] # se scelto masquerading random
        then

            for interface in "${TEAMS[@]}"
            do
                sudo iptables -t nat -A POSTROUTING -o $interface -j SNAT --to-source $((RANDOM%253+1)).$((RANDOM%253+1)).$((RANDOM%253+1)).$((RANDOM%253+1))
            done

        elif [ $MASQUERADING != false ] # se impostato un indirizzo uguale per tutti 
        then
            for interface in "${TEAMS[@]}"
            do
                sudo iptables -t nat -A POSTROUTING -o $interface -j SNAT --to-source $MASQUERADING
            done
        fi
    elif [ ${#MASQUERADING[@]} > 1 ] # se impostato un indirizzo per ogni squadra
        then
            for ((i=0;i<${#TEAMS[@]};++i))
            do
                sudo iptables -t nat -A POSTROUTING -o ${TEAMS[i]} -j SNAT --to-source ${MASQUERADING[i]}
            done
    fi

fi
