#!/bin/bash

# fase, uplink, management, team...

# -p = phase [1 or 2]
# -u = uplink interface
# -m = management interface
# -r = masquerading mode [true for random addresses or set an IP]
# -s = address to use for masquerading source
# -t = team n interface (around quotes "")


while getopts p:u:m:r:t: option
do
case "${option}"
in
p) PHASE=${OPTARG};;
u) UPLINK=${OPTARG};;
m) MANAGEMENT_INTERFACE=${OPTARG};;
r) MASQUERADING=${OPTARG};;
s) MASKADDRESS=${OPTARG};;
t) TEAMS=${OPTARG};; #lista delle interfacce, in ordine
esac
done


# TEAM1_INTERFACE="ens38"
# TEAM2_INTERFACE="ens39"
# TEAM3_INTERFACE="ens40"

# nteam=0
# for val in ${TEAMS}
# do
#     ((nteam++))
#     declare TEAM${nteam}_INTERFACE="$val"
# done


    

# Pulizia delle attuali regole e reset ad ACCEPT
sudo iptables -F
sudo iptables -P FORWARD ACCEPT
sudo iptables -P INPUT ACCEPT
sudo iptables -P OUTPUT ACCEPT
sudo iptables -t nat -F


# DROP di tutti i pacchetti da inoltrare
# sudo iptables -P FORWARD DROP

# DROP dei pacchetti da ricevere (incluso ping)
sudo iptables -P INPUT DROP

# Log di tutti i pacchetti entranti droppati
sudo iptables -X LOGGING # elimina chain di LOGGING se esistente
sudo iptables -N LOGGING # crea nuova chain
sudo iptables -A INPUT -j LOGGING # manda tutti i pacchetti entranti alla chain LOGGING
sudo iptables -A LOGGING -m limit --limit 1/min -j LOG --log-prefix "IPTables-DROPPED-Packets: " --log-level 4
# sudo iptables -A LOGGING -j DROP # i pacchetti arrivati in LOGGING saranno droppati

# ------------------------------------------------------------

# Accetta tutte le connessioni dal management
sudo iptables -A INPUT -i $MANAGEMENT_INTERFACE -j ACCEPT
# Accetta tutte le connessioni da macchina host di vmware (per comodità)
sudo iptables -A INPUT -s 172.168.1.1 -j ACCEPT

# ------------------------------------------------------------

# Permette ping da management a chiunque + risposta
# SUPERFLUA? FORWARD ACCEPTS ALL
# sudo iptables -A FORWARD -p icmp --icmp-type 8 -i $MANAGEMENT_INTERFACE -j ACCEPT


# permette risposta al ping iniziato da management (SUPERFLUO? DATO CHE FORWARD PERMETTE TUTTO)
# sudo iptables -A FORWARD -p icmp --icmp-type 0 -o $MANAGEMENT_INTERFACE -j ACCEPT


# Permette nuova connessione tcp solo da management, gli altri non possono iniziarla (SUPERFLUO? FORWARD ACCEPTS ALL)
# sudo iptables -A FORWARD -p tcp -i $MANAGEMENT_INTERFACE -m state --state NEW -j ACCEPT


# ------------------------------------------------------------
# manda tutti i pacchetti alla chain LOGGING
sudo iptables -A FORWARD -j LOGGING 


# Permette di rispondere a connessioni già stabilite (ovviamente solo chi ha il permesso può iniziarle)
sudo iptables -A FORWARD -m conntrack --ctstate ESTABLISHED -j ACCEPT # FUNZIONA ANCHE PER UDP, SENZA QUESTA UDP NON RICEVE ACK


# permettere da management a chiunque, non viceversa
sudo iptables -A FORWARD -i $MANAGEMENT_INTERFACE -j ACCEPT

# drop pacchetti destinati ad uplink e management
sudo iptables -A FORWARD -o uplink -j DROP
sudo iptables -A FORWARD -o $MANAGEMENT_INTERFACE -j DROP


# Permettere connessione nuova udp da management
# sudo iptables -A FORWARD -p udp -i $MANAGEMENT_INTERFACE -m state --state NEW -j ACCEPT



# Permette connessioni loopback
sudo iptables -A INPUT -i lo -j ACCEPT
sudo iptables -A OUTPUT -o lo -j ACCEPT

# Permette le risposte al ping iniziato dal virtual router da parte di chiunque
sudo iptables -A INPUT -p icmp --icmp-type 0 -j ACCEPT



if [ $PHASE -eq 2 ]
then 

    # SECONDA FASE

    # accept all sulla catena di forward (INUTILE, LA POLITICA È GIÀ ACCEPT)
    # sudo iptables -A FORWARD -j ACCEPT 

    if [ $MASQUERADING = true ] #se scelto masquerading casuale
    then

        for interface in $TEAMS 
        do
            sudo iptables -t nat -A POSTROUTING -o $interface -j SNAT --to-source $((RANDOM%256)).$((RANDOM%256)).$((RANDOM%256)).$((RANDOM%256))
        done

    else #altrimenti

        for interface in $TEAMS
        do
            sudo iptables -t nat -A POSTROUTING -o $interface -j SNAT --to-source $MASQUERADING
        done

    fi
        # Cambia indirizzo sorgente dei TUTTI i pacchetti verso i team in modo randomico
        # sudo iptables -t nat -A POSTROUTING -o $TEAM1_INTERFACE -j SNAT --to-source ${maskaddresses[$[ $RANDOM % 5]]}
        # sudo iptables -t nat -A POSTROUTING -o $TEAM2_INTERFACE -j SNAT --to-source ${maskaddresses[$[ $RANDOM % 5]]}
        # sudo iptables -t nat -A POSTROUTING -o $TEAM3_INTERFACE -j SNAT --to-source ${maskaddresses[$[ $RANDOM % 5]]}

fi
